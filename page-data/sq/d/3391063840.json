{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"Penn Marketplace Mobile","tech":["React Native","Node","Express","MongoDB"],"github":"https://github.com/raymon-shi/penn-marketplace-mobile","external":""},"html":"<p>A Penn exclusive marketplace where people within the community can buy and sell goods and services to each other. The mobile app version.</p>"}},{"node":{"frontmatter":{"title":"PennInTouch Lite","tech":["Ruby","Rails","PostgreSQL"],"github":"https://github.com/raymon-shi/pennintouch-lite-ruby","external":""},"html":"<p>PennInTouch Lite using Ruby on Rails</p>"}},{"node":{"frontmatter":{"title":"Campuswire Lite","tech":["React","Node","Express","MongoDB"],"github":"https://github.com/raymon-shi/campuswire-lite","external":""},"html":"<p>A light clone of the Campuswire forum using the MERN stack .</p>"}},{"node":{"frontmatter":{"title":"Twitter Lite","tech":["Ruby","Rails","PostgreSQL"],"github":"https://github.com/raymon-shi/pennintouch-lite-ruby","external":"https://rshi-twitter-super-lite.herokuapp.com/"},"html":"<p>I attempted to recreate Twitter using Ruby on Rails. Some features that I've implemented are creating tweets, deleting tweets, following other users, twitter feed and a section for news articles. My web application is hosted on Heroku at: <a href=\"https://rshi-twitter-super-lite.herokuapp.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://rshi-twitter-super-lite.herokuapp.com/</a></p>"}},{"node":{"frontmatter":{"title":"Billboard Hot 100 Predictor","tech":["Python","NLTK","Spotify API","LyricGenius"],"github":"https://github.com/raymon-shi/hot-100-predictor","external":""},"html":"<p>My partner and I gathered song data on 3000 Billboard Hot 100 Songs and 10,000 random songs from Spotify playlist. We extracted song features using the NLTK Sentiment Intensity Analyzer and the Spotify API in order to build a neural network that tried to predict whether a song belonged in the Billboard Hot 100 or not.</p>"}},{"node":{"frontmatter":{"title":"Computational Lyric Analysis: Quadeca","tech":["Python","NLTK"],"github":"https://github.com/raymon-shi/Computational-Lyric-Analysis-Quadeca","external":""},"html":"<p>For this project, I explore the textual differences between Quadeca's earlier and most recent music using word frequency list, keyness analysis, and sentiment analysis.</p>"}},{"node":{"frontmatter":{"title":"Duck Hunt Lite","tech":["Java"],"github":"https://github.com/raymon-shi/duck-hunt-game","external":""},"html":"<p>A click and point rendition of the retro NES game Duck Hunt. The game was built in Java 1.8 and features a functional GUI, a save-load system, and different types of birds with different abilities.</p>"}}]}}}